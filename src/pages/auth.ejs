<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up & Login - Raw Essex</title>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #0f172a 0%, #1a4c24 50%, #22c55e 100%);
            min-height: 100vh;
            color: #1a202c;
        }

        .nav-container {
            position: fixed;
            top: 0;
            width: 100%;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            z-index: 1000;
            transition: all 0.3s ease;
            border-bottom: 1px solid rgba(34, 197, 94, 0.1);
        }

        .nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px 40px;
        }

        .logo {
            display: flex;
            align-items: center;
            font-family: 'Playfair Display', serif;
            font-size: 2rem;
            font-weight: 700;
            color: #1a4c24;
            text-decoration: none;
        }

        .logo img {
            height: 60px;
            margin-right: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 3rem;
            font-weight: 500;
        }

        .nav-links a {
            color: #1a4c24;
            text-decoration: none;
            padding: 12px 24px;
            border-radius: 50px;
            transition: all 0.3s ease;
            position: relative;
        }

        .nav-links a:hover {
            background: linear-gradient(135deg, #22c55e, #16a34a);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(34, 197, 94, 0.3);
        }

        .container {
            max-width: 500px;
            margin: 0 auto;
            padding: 120px 20px 40px;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .auth-container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 25px;
            padding: 3rem;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            border: 2px solid rgba(34, 197, 94, 0.1);
            width: 100%;
        }

        .auth-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .auth-title {
            font-family: 'Playfair Display', serif;
            font-size: 2.5rem;
            color: #1a4c24;
            margin-bottom: 0.5rem;
        }

        .auth-subtitle {
            color: #4b5563;
            font-size: 1.1rem;
        }

        .auth-tabs {
            display: flex;
            margin-bottom: 2rem;
            background: rgba(34, 197, 94, 0.1);
            border-radius: 15px;
            padding: 0.5rem;
        }

        .auth-tab {
            flex: 1;
            padding: 1rem;
            text-align: center;
            border-radius: 10px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            background: transparent;
            border: none;
            color: #4b5563;
        }

        .auth-tab.active {
            background: linear-gradient(135deg, #22c55e, #16a34a);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(34, 197, 94, 0.3);
        }

        .auth-form {
            display: none;
        }

        .auth-form.active {
            display: block;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #1a4c24;
        }

        .form-group input {
            width: 100%;
            padding: 1rem;
            border: 2px solid rgba(34, 197, 94, 0.2);
            border-radius: 15px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
            background: white;
        }

        .form-group input:focus {
            outline: none;
            border-color: #22c55e;
            box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
        }

        .input-option {
            display: flex;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .input-option button {
            flex: 1;
            padding: 0.8rem;
            border: 2px solid rgba(34, 197, 94, 0.2);
            border-radius: 10px;
            background: white;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
        }

        .input-option button.active {
            background: linear-gradient(135deg, #22c55e, #16a34a);
            color: white;
            border-color: #22c55e;
        }

        .submit-btn {
            width: 100%;
            padding: 1rem 2rem;
            background: linear-gradient(135deg, #22c55e, #16a34a);
            color: white;
            border: none;
            border-radius: 15px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(34, 197, 94, 0.3);
        }

        .submit-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }

        .auth-divider {
            text-align: center;
            margin: 1.5rem 0;
            color: #6b7280;
            position: relative;
        }

        .auth-divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: rgba(34, 197, 94, 0.2);
            z-index: 1;
        }

        .auth-divider span {
            background: white;
            padding: 0 1rem;
            position: relative;
            z-index: 2;
        }

        .error-message {
            background: linear-gradient(135deg, #fef2f2, #fee2e2);
            color: #dc2626;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1rem;
            border: 1px solid #ef4444;
            display: none;
        }

        .success-message {
            background: linear-gradient(135deg, #dcfce7, #bbf7d0);
            color: #166534;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1rem;
            border: 1px solid #22c55e;
            display: none;
        }

        .loading {
            display: none;
            text-align: center;
            color: #6b7280;
        }

        .loading i {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
            color: #22c55e;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 768px) {
            .container {
                padding: 100px 1rem 40px;
            }

            .auth-container {
                padding: 2rem;
            }

            .auth-title {
                font-size: 2rem;
            }

            .nav {
                padding: 15px 20px;
            }

            .nav-links {
                gap: 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="nav-container">
        <nav class="nav">
            <div class="logo">
                <img src="/images/raw-essex-logo.jpg" alt="Raw Essex Logo">
                Raw Essex
            </div>
            <ul class="nav-links">
                <li><a href="/">Home</a></li>
                <li><a href="/products">All Products</a></li>
                <li><a href="/faq">FAQ & Education</a></li>
                <li><a href="/cart"><i class="fas fa-shopping-cart"></i> Cart</a></li>
            </ul>
        </nav>
    </div>

    <div class="container">
        <div class="auth-container">
            <div class="auth-header">
                <h1 class="auth-title">Welcome to Raw Essex</h1>
                <p class="auth-subtitle">Create your account or sign in to continue</p>
            </div>

            <div class="auth-tabs">
                <button class="auth-tab active" onclick="showTab('signup')">Sign Up</button>
                <button class="auth-tab" onclick="showTab('login')">Login</button>
            </div>

            <div class="error-message" id="errorMessage"></div>
            <div class="success-message" id="successMessage"></div>
            <div class="loading" id="loading">
                <i class="fas fa-spinner"></i>
                <p>Processing...</p>
            </div>

            <!-- Sign Up Form -->
            <form class="auth-form active" id="signupForm">
                <div class="form-group">
                    <label for="name">Full Name</label>
                    <input type="text" id="name" name="name" required>
                </div>

                <div class="form-group">
                    <label>Contact Method</label>
                    <div class="input-option">
                        <button type="button" class="active" onclick="selectContactMethod('email')">Email</button>
                        <button type="button" onclick="selectContactMethod('phone')">Phone</button>
                    </div>
                </div>

                <div class="form-group" id="emailGroup">
                    <label for="email">Email Address</label>
                    <input type="email" id="email" name="email">
                </div>

                <div class="form-group" id="phoneGroup" style="display: none;">
                    <label for="phone">Phone Number</label>
                    <input type="tel" id="phone" name="phone" placeholder="+44 7xxx xxx xxx">
                </div>

                <div class="form-group">
                    <label for="signupPassword">Password</label>
                    <input type="password" id="signupPassword" name="password" required minlength="6">
                </div>

                <button type="submit" class="submit-btn">
                    <i class="fas fa-user-plus"></i>
                    Create Account
                </button>
            </form>

            <!-- Login Form -->
            <form class="auth-form" id="loginForm">
                <div class="form-group">
                    <label for="identifier">Email or Phone</label>
                    <input type="text" id="identifier" name="identifier" required>
                </div>

                <div class="form-group">
                    <label for="loginPassword">Password</label>
                    <input type="password" id="loginPassword" name="password" required>
                </div>

                <button type="submit" class="submit-btn">
                    <i class="fas fa-sign-in-alt"></i>
                    Sign In
                </button>
            </form>
        </div>
    </div>

    <script>
        let currentContactMethod = 'email';

        function showTab(tab) {
            // Update tab buttons
            document.querySelectorAll('.auth-tab').forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');

            // Update forms
            document.querySelectorAll('.auth-form').forEach(form => form.classList.remove('active'));
            document.getElementById(tab + 'Form').classList.add('active');

            // Clear messages
            hideMessages();
        }

        function selectContactMethod(method) {
            currentContactMethod = method;

            // Update buttons
            document.querySelectorAll('.input-option button').forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');

            // Update form fields
            if (method === 'email') {
                document.getElementById('emailGroup').style.display = 'block';
                document.getElementById('phoneGroup').style.display = 'none';
                document.getElementById('email').required = true;
                document.getElementById('phone').required = false;
                document.getElementById('phone').value = '';
            } else {
                document.getElementById('emailGroup').style.display = 'none';
                document.getElementById('phoneGroup').style.display = 'block';
                document.getElementById('email').required = false;
                document.getElementById('phone').required = true;
                document.getElementById('email').value = '';
            }
        }

        function showLoading() {
            document.getElementById('loading').style.display = 'block';
            document.querySelectorAll('.submit-btn').forEach(btn => btn.disabled = true);
        }

        function hideLoading() {
            document.getElementById('loading').style.display = 'none';
            document.querySelectorAll('.submit-btn').forEach(btn => btn.disabled = false);
        }

        function showMessage(type, message) {
            hideMessages();
            const messageEl = document.getElementById(type + 'Message');
            messageEl.textContent = message;
            messageEl.style.display = 'block';
        }

        function hideMessages() {
            document.getElementById('errorMessage').style.display = 'none';
            document.getElementById('successMessage').style.display = 'none';
        }

        // Sign up form handler
        document.getElementById('signupForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            showLoading();

            const formData = new FormData(e.target);
            const data = {
                name: formData.get('name'),
                password: formData.get('password')
            };

            if (currentContactMethod === 'email') {
                data.email = formData.get('email');
            } else {
                data.phone = formData.get('phone');
            }

            try {
                const response = await fetch('/api/auth/register', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (result.success) {
                    // Store session
                    localStorage.setItem('rawEssexSession', result.sessionId);
                    localStorage.setItem('rawEssexUser', JSON.stringify(result.user));

                    showMessage('success', 'Account created successfully! Redirecting...');
                    setTimeout(() => {
                        window.location.href = '/';
                    }, 2000);
                } else {
                    showMessage('error', result.error || 'Registration failed');
                }
            } catch (error) {
                showMessage('error', 'Network error. Please try again.');
                console.error('Registration error:', error);
            } finally {
                hideLoading();
            }
        });

        // Login form handler
        document.getElementById('loginForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            showLoading();

            const formData = new FormData(e.target);
            const data = {
                identifier: formData.get('identifier'),
                password: formData.get('password')
            };

            try {
                const response = await fetch('/api/auth/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (result.success) {
                    // Store session
                    localStorage.setItem('rawEssexSession', result.sessionId);
                    localStorage.setItem('rawEssexUser', JSON.stringify(result.user));

                    showMessage('success', 'Login successful! Redirecting...');
                    setTimeout(() => {
                        window.location.href = '/';
                    }, 2000);
                } else {
                    showMessage('error', result.error || 'Login failed');
                }
            } catch (error) {
                showMessage('error', 'Network error. Please try again.');
                console.error('Login error:', error);
            } finally {
                hideLoading();
            }
        });

        // Check if user is already logged in
        document.addEventListener('DOMContentLoaded', function() {
            const session = localStorage.getItem('rawEssexSession');
            if (session) {
                // User is already logged in, redirect to home
                window.location.href = '/';
            }
        });
    </script>
</body>
</html>