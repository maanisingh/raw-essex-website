<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Settings - Raw Essex</title>
    <link href="https://fonts.googleapis.com/css2?family=Archivo:wght@400;600;700&family=Questrial:wght@400&display=swap" rel="stylesheet">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: 'Questrial', Arial, sans-serif;
            line-height: 1.6;
            color: #1a4c24;
            background-color: #f8fdf9;
        }
        .header {
            background: linear-gradient(135deg, #1a4c24, #2d7c47);
            color: white;
            padding: 1rem 0;
            box-shadow: 0 4px 20px rgba(26, 76, 36, 0.3);
        }
        .nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }
        .logo {
            display: flex;
            align-items: center;
            font-family: 'Archivo', sans-serif;
            font-size: 1.8rem;
            font-weight: 700;
        }
        .logo img {
            height: 50px;
            margin-right: 15px;
            border-radius: 10px;
        }
        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
            font-family: 'Archivo', sans-serif;
        }
        .nav-links a {
            color: white;
            text-decoration: none;
            font-weight: 600;
            padding: 10px 15px;
            border-radius: 25px;
            transition: all 0.3s;
        }
        .nav-links a:hover {
            background: rgba(255,255,255,0.2);
            color: #7dd87f;
        }
        .container { max-width: 1200px; margin: 0 auto; padding: 40px 20px; }
        .page-header {
            text-align: center;
            margin-bottom: 3rem;
            background: linear-gradient(135deg, #f0fdf4, #dcfce7);
            padding: 2rem;
            border-radius: 25px;
            box-shadow: 0 10px 30px rgba(26, 76, 36, 0.1);
        }
        .page-header h1 {
            color: #1a4c24;
            margin-bottom: 1rem;
            font-family: 'Archivo', sans-serif;
            font-size: 2.5rem;
            font-weight: 700;
        }
        .settings-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }
        .settings-card {
            background: white;
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 10px 30px rgba(26, 76, 36, 0.1);
            border: 2px solid transparent;
            transition: all 0.3s;
        }
        .settings-card:hover {
            border-color: #4ade80;
            transform: translateY(-2px);
        }
        .settings-card h2 {
            color: #1a4c24;
            margin-bottom: 1.5rem;
            font-family: 'Archivo', sans-serif;
            font-size: 1.5rem;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        .form-group {
            margin-bottom: 1.5rem;
        }
        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #1a4c24;
        }
        .form-group input, .form-group select {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #dcfce7;
            border-radius: 10px;
            font-size: 1rem;
            transition: border-color 0.3s;
        }
        .form-group input:focus, .form-group select:focus {
            outline: none;
            border-color: #22c55e;
            box-shadow: 0 0 10px rgba(34, 197, 94, 0.2);
        }
        .toggle-switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 30px;
        }
        .toggle-switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 30px;
        }
        .slider:before {
            position: absolute;
            content: "";
            height: 22px;
            width: 22px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }
        input:checked + .slider {
            background-color: #22c55e;
        }
        input:checked + .slider:before {
            transform: translateX(30px);
        }
        .btn {
            background: linear-gradient(135deg, #4ade80, #22c55e);
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            transition: all 0.3s;
        }
        .btn:hover {
            background: linear-gradient(135deg, #22c55e, #16a34a);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(34, 197, 94, 0.3);
        }
        .btn-secondary {
            background: linear-gradient(135deg, #6b7280, #4b5563);
        }
        .btn-secondary:hover {
            background: linear-gradient(135deg, #4b5563, #374151);
        }
        .status-indicator {
            display: inline-block;
            padding: 0.25rem 0.75rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
        }
        .status-enabled {
            background: #d1fae5;
            color: #065f46;
        }
        .status-disabled {
            background: #fee2e2;
            color: #991b1b;
        }
        .footer {
            background: linear-gradient(135deg, #1a4c24, #2d7c47);
            color: white;
            text-align: center;
            padding: 3rem 0;
            margin-top: 3rem;
        }
    </style>
</head>
<body>
    <header class="header">
        <nav class="nav">
            <div class="logo">
                <img src="/images/raw-essex-logo.jpg" alt="Raw Essex Logo">
                Raw Essex Admin
            </div>
            <ul class="nav-links">
                <li><a href="/admin">Products</a></li>
                <li><a href="/admin/settings">Settings</a></li>
                <li><a href="/">View Site</a></li>
            </ul>
        </nav>
    </header>

    <div class="container">
        <div class="page-header">
            <h1>‚öôÔ∏è Admin Settings</h1>
            <p>Configure payment processing and shipping options</p>
        </div>

        <div class="settings-grid">
            <!-- Stripe Payment Settings -->
            <div class="settings-card">
                <h2>üí≥ Stripe Payment Settings</h2>
                <form id="stripeSettingsForm">
                    <div class="form-group">
                        <label>
                            <span class="toggle-switch">
                                <input type="checkbox" id="stripeEnabled">
                                <span class="slider"></span>
                            </span>
                            Enable Stripe Payments
                            <span id="stripeStatus" class="status-indicator status-disabled">Disabled</span>
                        </label>
                    </div>
                    <div class="form-group">
                        <label for="stripePublicKey">Publishable Key</label>
                        <input type="text" id="stripePublicKey" placeholder="pk_test_...">
                    </div>
                    <div class="form-group">
                        <label for="stripeSecretKey">Secret Key</label>
                        <input type="password" id="stripeSecretKey" placeholder="sk_test_...">
                    </div>
                    <button type="submit" class="btn">Save Stripe Settings</button>
                </form>
            </div>

            <!-- DPD Shipping Settings -->
            <div class="settings-card">
                <h2>üì¶ DPD Shipping Settings</h2>
                <form id="dpdSettingsForm">
                    <div class="form-group">
                        <label>
                            <span class="toggle-switch">
                                <input type="checkbox" id="dpdEnabled">
                                <span class="slider"></span>
                            </span>
                            Enable DPD Shipping
                            <span id="dpdStatus" class="status-indicator status-disabled">Disabled</span>
                        </label>
                    </div>
                    <div class="form-group">
                        <label for="dpdApiKey">API Key</label>
                        <input type="password" id="dpdApiKey" placeholder="DPD API Key">
                    </div>
                    <div class="form-group">
                        <label for="dpdPricePerKg">Price per KG (¬£)</label>
                        <input type="number" id="dpdPricePerKg" value="5.99" step="0.01" min="0">
                    </div>
                    <div class="form-group">
                        <label for="dpdFreeShipping">Free Shipping Threshold (¬£)</label>
                        <input type="number" id="dpdFreeShipping" value="50" step="0.01" min="0">
                    </div>
                    <button type="submit" class="btn">Save DPD Settings</button>
                </form>
            </div>

            <!-- DHL Shipping Settings -->
            <div class="settings-card">
                <h2>üöö DHL Shipping Settings</h2>
                <form id="dhlSettingsForm">
                    <div class="form-group">
                        <label>
                            <span class="toggle-switch">
                                <input type="checkbox" id="dhlEnabled">
                                <span class="slider"></span>
                            </span>
                            Enable DHL Shipping
                            <span id="dhlStatus" class="status-indicator status-disabled">Disabled</span>
                        </label>
                    </div>
                    <div class="form-group">
                        <label for="dhlApiKey">API Key</label>
                        <input type="password" id="dhlApiKey" placeholder="DHL API Key">
                    </div>
                    <div class="form-group">
                        <label for="dhlPricePerKg">Price per KG (¬£)</label>
                        <input type="number" id="dhlPricePerKg" value="7.99" step="0.01" min="0">
                    </div>
                    <div class="form-group">
                        <label for="dhlFreeShipping">Free Shipping Threshold (¬£)</label>
                        <input type="number" id="dhlFreeShipping" value="75" step="0.01" min="0">
                    </div>
                    <button type="submit" class="btn">Save DHL Settings</button>
                </form>
            </div>

            <!-- Royal Mail Settings -->
            <div class="settings-card">
                <h2>üìÆ Royal Mail Settings</h2>
                <form id="royalMailSettingsForm">
                    <div class="form-group">
                        <label>
                            <span class="toggle-switch">
                                <input type="checkbox" id="royalMailEnabled" checked>
                                <span class="slider"></span>
                            </span>
                            Enable Royal Mail
                            <span id="royalMailStatus" class="status-indicator status-enabled">Enabled</span>
                        </label>
                    </div>
                    <div class="form-group">
                        <label for="royalMailApiKey">API Key (Optional)</label>
                        <input type="password" id="royalMailApiKey" placeholder="Royal Mail API Key">
                    </div>
                    <div class="form-group">
                        <label for="royalMailPricePerKg">Price per KG (¬£)</label>
                        <input type="number" id="royalMailPricePerKg" value="3.99" step="0.01" min="0">
                    </div>
                    <div class="form-group">
                        <label for="royalMailFreeShipping">Free Shipping Threshold (¬£)</label>
                        <input type="number" id="royalMailFreeShipping" value="30" step="0.01" min="0">
                    </div>
                    <button type="submit" class="btn">Save Royal Mail Settings</button>
                </form>
            </div>
        </div>

        <div style="text-align: center; margin-top: 2rem;">
            <button onclick="testSettings()" class="btn btn-secondary">Test All Configurations</button>
        </div>
    </div>

    <footer class="footer">
        <div class="container">
            <p>&copy; 2024 Raw Essex. Admin Panel - Secure Settings Management</p>
        </div>
    </footer>

    <script>
        // Load current settings
        async function loadSettings() {
            try {
                const response = await fetch('/admin/settings');
                const settings = await response.json();

                // Populate Stripe settings
                document.getElementById('stripeEnabled').checked = settings.stripe?.enabled || false;
                document.getElementById('stripePublicKey').value = settings.stripe?.publicKey || '';
                document.getElementById('stripeSecretKey').value = settings.stripe?.secretKey || '';
                updateStatus('stripe', settings.stripe?.enabled);

                // Populate DPD settings
                document.getElementById('dpdEnabled').checked = settings.dpd?.enabled || false;
                document.getElementById('dpdApiKey').value = settings.dpd?.apiKey || '';
                document.getElementById('dpdPricePerKg').value = settings.dpd?.pricePerKg || 5.99;
                document.getElementById('dpdFreeShipping').value = settings.dpd?.freeShippingThreshold || 50;
                updateStatus('dpd', settings.dpd?.enabled);

                // Populate DHL settings
                document.getElementById('dhlEnabled').checked = settings.dhl?.enabled || false;
                document.getElementById('dhlApiKey').value = settings.dhl?.apiKey || '';
                document.getElementById('dhlPricePerKg').value = settings.dhl?.pricePerKg || 7.99;
                document.getElementById('dhlFreeShipping').value = settings.dhl?.freeShippingThreshold || 75;
                updateStatus('dhl', settings.dhl?.enabled);

                // Populate Royal Mail settings
                document.getElementById('royalMailEnabled').checked = settings.royalMail?.enabled || true;
                document.getElementById('royalMailApiKey').value = settings.royalMail?.apiKey || '';
                document.getElementById('royalMailPricePerKg').value = settings.royalMail?.pricePerKg || 3.99;
                document.getElementById('royalMailFreeShipping').value = settings.royalMail?.freeShippingThreshold || 30;
                updateStatus('royalMail', settings.royalMail?.enabled);

            } catch (error) {
                console.error('Error loading settings:', error);
            }
        }

        function updateStatus(service, enabled) {
            const statusElement = document.getElementById(service + 'Status');
            if (enabled) {
                statusElement.textContent = 'Enabled';
                statusElement.className = 'status-indicator status-enabled';
            } else {
                statusElement.textContent = 'Disabled';
                statusElement.className = 'status-indicator status-disabled';
            }
        }

        // Add event listeners for toggle switches
        ['stripe', 'dpd', 'dhl', 'royalMail'].forEach(service => {
            document.getElementById(service + 'Enabled').addEventListener('change', (e) => {
                updateStatus(service, e.target.checked);
            });
        });

        // Form submission handlers
        document.getElementById('stripeSettingsForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            await saveSettings('stripe');
        });

        document.getElementById('dpdSettingsForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            await saveSettings('dpd');
        });

        document.getElementById('dhlSettingsForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            await saveSettings('dhl');
        });

        document.getElementById('royalMailSettingsForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            await saveSettings('royalMail');
        });

        async function saveSettings(service) {
            const data = {};

            if (service === 'stripe') {
                data.stripe = {
                    enabled: document.getElementById('stripeEnabled').checked,
                    publicKey: document.getElementById('stripePublicKey').value,
                    secretKey: document.getElementById('stripeSecretKey').value
                };
            } else if (service === 'dpd') {
                data.dpd = {
                    enabled: document.getElementById('dpdEnabled').checked,
                    apiKey: document.getElementById('dpdApiKey').value,
                    pricePerKg: parseFloat(document.getElementById('dpdPricePerKg').value),
                    freeShippingThreshold: parseFloat(document.getElementById('dpdFreeShipping').value)
                };
            } else if (service === 'dhl') {
                data.dhl = {
                    enabled: document.getElementById('dhlEnabled').checked,
                    apiKey: document.getElementById('dhlApiKey').value,
                    pricePerKg: parseFloat(document.getElementById('dhlPricePerKg').value),
                    freeShippingThreshold: parseFloat(document.getElementById('dhlFreeShipping').value)
                };
            } else if (service === 'royalMail') {
                data.royalMail = {
                    enabled: document.getElementById('royalMailEnabled').checked,
                    apiKey: document.getElementById('royalMailApiKey').value,
                    pricePerKg: parseFloat(document.getElementById('royalMailPricePerKg').value),
                    freeShippingThreshold: parseFloat(document.getElementById('royalMailFreeShipping').value)
                };
            }

            try {
                const response = await fetch('/admin/settings', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    alert(service.charAt(0).toUpperCase() + service.slice(1) + ' settings saved successfully!');
                } else {
                    alert('Error saving settings. Please try again.');
                }
            } catch (error) {
                console.error('Error saving settings:', error);
                alert('Error saving settings. Please try again.');
            }
        }

        async function testSettings() {
            try {
                const response = await fetch('/admin/test-settings');
                const results = await response.json();

                let message = 'Configuration Test Results:\n\n';
                for (const [service, result] of Object.entries(results)) {
                    message += `${service}: ${result.status}\n`;
                    if (result.message) message += `  ${result.message}\n`;
                }

                alert(message);
            } catch (error) {
                alert('Error testing configurations: ' + error.message);
            }
        }

        // Load settings on page load
        loadSettings();
    </script>
</body>
</html>