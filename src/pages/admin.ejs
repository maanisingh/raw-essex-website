<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Raw Essex - Admin Panel</title>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #0f172a 0%, #1a4c24 50%, #22c55e 100%);
            min-height: 100vh;
            color: #1a202c;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 25px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            border: 2px solid rgba(34, 197, 94, 0.1);
        }

        .header h1 {
            font-family: 'Playfair Display', serif;
            font-size: 2.5rem;
            color: #1a4c24;
            margin-bottom: 0.5rem;
        }

        .header p {
            color: #4b5563;
            font-size: 1.1rem;
        }

        .header-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 1.5rem;
        }

        .tab-navigation {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 25px;
            padding: 1rem;
            margin-bottom: 2rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            border: 2px solid rgba(34, 197, 94, 0.1);
        }

        .tab-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .tab-btn {
            padding: 1rem 2rem;
            background: transparent;
            border: 2px solid transparent;
            border-radius: 20px;
            cursor: pointer;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s ease;
            color: #4b5563;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .tab-btn.active {
            background: linear-gradient(135deg, #22c55e, #16a34a);
            color: white;
            border-color: #22c55e;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(34, 197, 94, 0.3);
        }

        .tab-btn:hover:not(.active) {
            background: rgba(34, 197, 94, 0.1);
            border-color: rgba(34, 197, 94, 0.3);
            color: #1a4c24;
        }

        .tab-content {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 25px;
            padding: 2rem;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            border: 2px solid rgba(34, 197, 94, 0.1);
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        .content-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid rgba(34, 197, 94, 0.1);
        }

        .content-title {
            font-family: 'Playfair Display', serif;
            font-size: 2rem;
            color: #1a4c24;
        }

        .btn {
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            font-weight: 600;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
        }

        .btn-primary {
            background: linear-gradient(135deg, #22c55e, #16a34a);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(34, 197, 94, 0.3);
        }

        .btn-secondary {
            background: linear-gradient(135deg, #6b7280, #4b5563);
            color: white;
        }

        .btn-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(107, 114, 128, 0.3);
        }

        .btn-danger {
            background: linear-gradient(135deg, #ef4444, #dc2626);
            color: white;
        }

        .btn-danger:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(239, 68, 68, 0.3);
        }

        .btn-warning {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            color: white;
        }

        .btn-warning:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(245, 158, 11, 0.3);
        }

        .grid {
            display: grid;
            gap: 1.5rem;
        }

        .grid-3 {
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        }

        .card {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            border: 2px solid rgba(34, 197, 94, 0.1);
            transition: all 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.15);
            border-color: rgba(34, 197, 94, 0.3);
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }

        .card-title {
            font-family: 'Playfair Display', serif;
            font-size: 1.3rem;
            color: #1a4c24;
            margin-bottom: 0.5rem;
        }

        .card-subtitle {
            color: #4b5563;
            font-size: 0.9rem;
        }

        .status-badge {
            padding: 0.4rem 1rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-confirmed {
            background: linear-gradient(135deg, #dcfce7, #bbf7d0);
            color: #166534;
            border: 1px solid #22c55e;
        }

        .status-processing {
            background: linear-gradient(135deg, #fef3c7, #fde68a);
            color: #92400e;
            border: 1px solid #f59e0b;
        }

        .status-shipped {
            background: linear-gradient(135deg, #dbeafe, #bfdbfe);
            color: #1e40af;
            border: 1px solid #3b82f6;
        }

        .status-delivered {
            background: linear-gradient(135deg, #ecfdf5, #d1fae5);
            color: #065f46;
            border: 1px solid #10b981;
        }

        .status-cancelled {
            background: linear-gradient(135deg, #fef2f2, #fee2e2);
            color: #991b1b;
            border: 1px solid #ef4444;
        }

        .status-in_stock {
            background: linear-gradient(135deg, #dcfce7, #bbf7d0);
            color: #166534;
            border: 1px solid #22c55e;
        }

        .status-out_of_stock {
            background: linear-gradient(135deg, #fef2f2, #fee2e2);
            color: #dc2626;
            border: 1px solid #ef4444;
        }

        .table-container {
            overflow-x: auto;
            border-radius: 15px;
            border: 2px solid rgba(34, 197, 94, 0.1);
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            background: white;
        }

        .table th,
        .table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid rgba(34, 197, 94, 0.1);
        }

        .table th {
            background: linear-gradient(135deg, #f0fdf4, #dcfce7);
            font-weight: 600;
            color: #1a4c24;
            font-family: 'Playfair Display', serif;
        }

        .table tr:hover {
            background: rgba(34, 197, 94, 0.05);
        }

        .banking-info {
            margin-bottom: 2rem;
        }

        .bank-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 2rem;
            border: 2px solid rgba(34, 197, 94, 0.1);
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .bank-detail {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 0;
            border-bottom: 1px solid rgba(34, 197, 94, 0.1);
        }

        .bank-detail:last-child {
            border-bottom: none;
        }

        .bank-detail label {
            font-weight: 600;
            color: #1a4c24;
            font-size: 1rem;
        }

        .bank-detail span {
            font-family: 'Courier New', monospace;
            background: rgba(34, 197, 94, 0.1);
            padding: 0.5rem 1rem;
            border-radius: 10px;
            color: #1a4c24;
            font-weight: 600;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.7);
            z-index: 1000;
            backdrop-filter: blur(5px);
        }

        .modal-content {
            background: white;
            margin: 2% auto;
            padding: 2rem;
            width: 90%;
            max-width: 600px;
            border-radius: 25px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.2);
            border: 2px solid rgba(34, 197, 94, 0.1);
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid rgba(34, 197, 94, 0.1);
        }

        .modal-title {
            font-family: 'Playfair Display', serif;
            font-size: 1.8rem;
            color: #1a4c24;
        }

        .close {
            background: none;
            border: none;
            font-size: 2rem;
            cursor: pointer;
            color: #6b7280;
            transition: color 0.3s ease;
        }

        .close:hover {
            color: #ef4444;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #1a4c24;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 0.8rem;
            border: 2px solid rgba(34, 197, 94, 0.2);
            border-radius: 10px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #22c55e;
            box-shadow: 0 0 0 3px rgba(34, 197, 94, 0.1);
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            border-radius: 20px;
            padding: 1.5rem;
            text-align: center;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            border: 2px solid rgba(34, 197, 94, 0.1);
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.15);
        }

        .stat-number {
            font-family: 'Playfair Display', serif;
            font-size: 2.5rem;
            font-weight: 700;
            color: #22c55e;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: #4b5563;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 0.9rem;
        }

        .order-items {
            background: rgba(34, 197, 94, 0.05);
            border-radius: 10px;
            padding: 1rem;
            margin: 1rem 0;
        }

        .order-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem 0;
            border-bottom: 1px solid rgba(34, 197, 94, 0.1);
        }

        .order-item:last-child {
            border-bottom: none;
        }

        .select-dropdown {
            position: relative;
            display: inline-block;
        }

        .loading {
            text-align: center;
            padding: 2rem;
            color: #6b7280;
        }

        .loading i {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: #22c55e;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 768px) {
            .container {
                padding: 1rem;
            }

            .header h1 {
                font-size: 2rem;
            }

            .tab-buttons {
                flex-direction: column;
            }

            .content-header {
                flex-direction: column;
                gap: 1rem;
                align-items: stretch;
            }

            .grid-3 {
                grid-template-columns: 1fr;
            }

            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Raw Essex Admin Panel</h1>
            <p>Complete management dashboard for your premium pet food business</p>
            <div class="header-controls">
                <div>
                    <span class="btn btn-secondary" onclick="location.href='/'">
                        <i class="fas fa-home"></i> View Website
                    </span>
                </div>
                <div id="headerStats">
                    <!-- Dynamic stats will be loaded here -->
                </div>
            </div>
        </div>

        <div class="tab-navigation">
            <div class="tab-buttons">
                <button class="tab-btn active" onclick="showTab('products', this)">
                    <i class="fas fa-box"></i> Products
                </button>
                <button class="tab-btn" onclick="showTab('orders', this)">
                    <i class="fas fa-shopping-cart"></i> Orders
                </button>
                <button class="tab-btn" onclick="showTab('accounts', this)">
                    <i class="fas fa-users"></i> Accounts
                </button>
                <button class="tab-btn" onclick="showTab('payments', this)">
                    <i class="fas fa-credit-card"></i> Payments
                </button>
            </div>
        </div>

        <!-- Products Tab -->
        <div id="products-tab" class="tab-content active">
            <div class="content-header">
                <h2 class="content-title">Product Management</h2>
                <button class="btn btn-primary" onclick="openAddProductModal()">
                    <i class="fas fa-plus"></i> Add New Product
                </button>
            </div>

            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-number" id="totalProducts"><%= products.length %></div>
                    <div class="stat-label">Total Products</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="inStockProducts">-</div>
                    <div class="stat-label">In Stock</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="outOfStockProducts">-</div>
                    <div class="stat-label">Out of Stock</div>
                </div>
            </div>

            <div class="grid grid-3" id="productsGrid">
                <% products.forEach(product => { %>
                    <div class="card" data-id="<%= product.id %>">
                        <div class="card-header">
                            <div>
                                <h3 class="card-title"><%= product.name %></h3>
                                <p class="card-subtitle"><%= product.category %></p>
                            </div>
                            <span class="status-badge status-<%= product.status %>">
                                <%= product.status.replace('_', ' ') %>
                            </span>
                        </div>
                        <div style="margin-bottom: 1rem;">
                            <div style="font-size: 1.5rem; font-weight: bold; color: #22c55e; margin-bottom: 0.5rem;">
                                £<%= product.price.toFixed(2) %>
                            </div>
                            <p style="color: #6b7280; font-size: 0.9rem; line-height: 1.4;">
                                <%= product.description %>
                            </p>
                        </div>
                        <div style="display: flex; gap: 0.5rem;">
                            <button class="btn btn-secondary" onclick="editProduct(<%= product.id %>)">
                                <i class="fas fa-edit"></i> Edit
                            </button>
                            <button class="btn btn-danger" onclick="deleteProduct(<%= product.id %>)">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>

        <!-- Orders Tab -->
        <div id="orders-tab" class="tab-content">
            <div class="content-header">
                <h2 class="content-title">Order Management</h2>
                <button class="btn btn-secondary" onclick="loadOrders()">
                    <i class="fas fa-sync"></i> Refresh
                </button>
            </div>

            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-number" id="totalOrders">0</div>
                    <div class="stat-label">Total Orders</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="pendingOrders">0</div>
                    <div class="stat-label">Pending</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="shippedOrders">0</div>
                    <div class="stat-label">Shipped</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="totalRevenue">£0</div>
                    <div class="stat-label">Total Revenue</div>
                </div>
            </div>

            <div id="ordersContainer">
                <div class="loading">
                    <i class="fas fa-spinner"></i>
                    <p>Loading orders...</p>
                </div>
            </div>
        </div>

        <!-- Accounts Tab -->
        <div id="accounts-tab" class="tab-content">
            <div class="content-header">
                <h2 class="content-title">Customer Accounts</h2>
                <button class="btn btn-secondary" onclick="loadAccounts()">
                    <i class="fas fa-sync"></i> Refresh
                </button>
            </div>

            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-number" id="totalAccounts">0</div>
                    <div class="stat-label">Total Customers</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="activeAccounts">0</div>
                    <div class="stat-label">Active Users</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="averageOrderValue">£0</div>
                    <div class="stat-label">Avg Order Value</div>
                </div>
            </div>

            <div id="accountsContainer">
                <div class="loading">
                    <i class="fas fa-spinner"></i>
                    <p>Loading accounts...</p>
                </div>
            </div>
        </div>

        <!-- Payments Tab -->
        <div id="payments-tab" class="tab-content">
            <div class="content-header">
                <h2 class="content-title">Payment Management</h2>
                <button class="btn btn-secondary" onclick="loadPayments()">
                    <i class="fas fa-sync"></i> Refresh
                </button>
            </div>

            <!-- Banking Details Section -->
            <div class="admin-section">
                <div class="section-header">
                    <h3><i class="fas fa-university"></i> Banking Details</h3>
                    <button class="btn btn-primary" onclick="showBankingModal()">
                        <i class="fas fa-edit"></i> Update Banking Details
                    </button>
                </div>
                <div class="banking-info">
                    <div class="bank-card">
                        <div class="bank-detail">
                            <label>Account Name:</label>
                            <span id="accountName">Raw Essex Ltd</span>
                        </div>
                        <div class="bank-detail">
                            <label>Sort Code:</label>
                            <span id="sortCode">XX-XX-XX</span>
                        </div>
                        <div class="bank-detail">
                            <label>Account Number:</label>
                            <span id="accountNumber">XXXXXXXX</span>
                        </div>
                        <div class="bank-detail">
                            <label>Reference Code:</label>
                            <span id="referenceCode">RAWESSEX</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Payment Statistics -->
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-number" id="totalPayments">0</div>
                    <div class="stat-label">Total Payments</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="pendingPayments">0</div>
                    <div class="stat-label">Pending</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="completedPayments">0</div>
                    <div class="stat-label">Completed</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="totalPaymentValue">£0</div>
                    <div class="stat-label">Total Value</div>
                </div>
            </div>

            <!-- Payments List -->
            <div id="paymentsContainer">
                <div class="loading">
                    <i class="fas fa-spinner"></i>
                    <p>Loading payments...</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Banking Details Modal -->
    <div id="bankingModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Update Banking Details</h2>
                <button class="close" onclick="closeBankingModal()">&times;</button>
            </div>
            <form id="bankingForm">
                <div class="form-group">
                    <label for="bankAccountName">Account Name:</label>
                    <input type="text" id="bankAccountName" required>
                </div>
                <div class="form-group">
                    <label for="bankSortCode">Sort Code:</label>
                    <input type="text" id="bankSortCode" placeholder="XX-XX-XX" required>
                </div>
                <div class="form-group">
                    <label for="bankAccountNumber">Account Number:</label>
                    <input type="text" id="bankAccountNumber" required>
                </div>
                <div class="form-group">
                    <label for="bankReferenceCode">Reference Code:</label>
                    <input type="text" id="bankReferenceCode" required>
                </div>
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="closeBankingModal()">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Banking Details</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Product Modal -->
    <div id="productModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="modalTitle">Add New Product</h2>
                <button class="close" onclick="closeModal()">&times;</button>
            </div>
            <form id="productForm">
                <input type="hidden" id="productId">
                <div class="form-group">
                    <label for="name">Product Name:</label>
                    <input type="text" id="name" required>
                </div>
                <div class="form-group">
                    <label for="price">Price (£):</label>
                    <input type="number" id="price" step="0.01" required>
                </div>
                <div class="form-group">
                    <label for="category">Category:</label>
                    <select id="category" required>
                        <option value="">Select Category</option>
                        <option value="Raw Dog Food">Raw Dog Food</option>
                        <option value="Organ Meats">Organ Meats</option>
                        <option value="Natural Dog Treats">Natural Dog Treats</option>
                        <option value="Dog Supplements">Dog Supplements</option>
                        <option value="Accessories">Accessories</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="status">Status:</label>
                    <select id="status" required>
                        <option value="in_stock">In Stock</option>
                        <option value="out_of_stock">Out of Stock</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="description">Description:</label>
                    <textarea id="description" rows="3" required></textarea>
                </div>
                <div class="form-group">
                    <label for="image">Image URL:</label>
                    <input type="text" id="image" placeholder="/images/product.jpg">
                </div>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Save Product
                </button>
            </form>
        </div>
    </div>

    <!-- Order Details Modal -->
    <div id="orderModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Order Details</h2>
                <button class="close" onclick="closeOrderModal()">&times;</button>
            </div>
            <div id="orderDetails">
                <!-- Order details will be loaded here -->
            </div>
        </div>
    </div>

    <script>
        // Tab Management
        function showTab(tabName, element) {
            // Hide all tabs
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });

            // Remove active from all buttons
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('active');
            });

            // Show selected tab
            const targetTab = document.getElementById(tabName + '-tab');
            if (targetTab) {
                targetTab.classList.add('active');
            }

            // Activate button
            if (element) {
                element.classList.add('active');
            }

            // Load data for the tab
            if (tabName === 'orders') {
                loadOrders();
            } else if (tabName === 'accounts') {
                loadAccounts();
            } else if (tabName === 'payments') {
                loadPayments();
            }
        }

        // Product Management
        function openAddProductModal() {
            document.getElementById('modalTitle').textContent = 'Add New Product';
            document.getElementById('productForm').reset();
            document.getElementById('productId').value = '';
            document.getElementById('productModal').style.display = 'block';
        }

        function editProduct(id) {
            fetch(`/admin/products`)
                .then(response => response.json())
                .then(products => {
                    const product = products.find(p => p.id === id);
                    if (product) {
                        document.getElementById('modalTitle').textContent = 'Edit Product';
                        document.getElementById('productId').value = product.id;
                        document.getElementById('name').value = product.name;
                        document.getElementById('price').value = product.price;
                        document.getElementById('category').value = product.category;
                        document.getElementById('status').value = product.status;
                        document.getElementById('description').value = product.description;
                        document.getElementById('image').value = product.image || '';
                        document.getElementById('productModal').style.display = 'block';
                    }
                });
        }

        function deleteProduct(id) {
            if (confirm('Are you sure you want to delete this product?')) {
                fetch(`/admin/products/${id}`, { method: 'DELETE' })
                    .then(response => response.json())
                    .then(() => location.reload());
            }
        }

        function closeModal() {
            document.getElementById('productModal').style.display = 'none';
        }

        // Orders Management
        function loadOrders() {
            const container = document.getElementById('ordersContainer');
            container.innerHTML = '<div class="loading"><i class="fas fa-spinner"></i><p>Loading orders...</p></div>';

            fetch('/admin/orders')
                .then(response => response.json())
                .then(orders => {
                    displayOrders(orders);
                    updateOrdersStats(orders);
                })
                .catch(error => {
                    console.error('Error loading orders:', error);
                    container.innerHTML = '<p style="text-align: center; color: #ef4444;">Error loading orders</p>';
                });
        }

        function displayOrders(orders) {
            const container = document.getElementById('ordersContainer');

            if (orders.length === 0) {
                container.innerHTML = '<p style="text-align: center; color: #6b7280;">No orders found</p>';
                return;
            }

            const ordersHTML = `
                <div class="table-container">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Items</th>
                                <th>Total</th>
                                <th>Status</th>
                                <th>Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${orders.map(order => `
                                <tr>
                                    <td>#${order.id}</td>
                                    <td>${order.userId}</td>
                                    <td>${order.items.length} items</td>
                                    <td>£${order.total.toFixed(2)}</td>
                                    <td><span class="status-badge status-${order.status}">${order.status}</span></td>
                                    <td>${new Date(order.createdAt).toLocaleDateString()}</td>
                                    <td>
                                        <button class="btn btn-secondary" onclick="viewOrder(${order.id})" style="padding: 0.4rem 0.8rem; font-size: 0.8rem;">
                                            <i class="fas fa-eye"></i> View
                                        </button>
                                        <select onchange="updateOrderStatus(${order.id}, this.value)" style="padding: 0.4rem; border-radius: 8px; border: 1px solid #ddd; margin-left: 0.5rem;">
                                            <option value="confirmed" ${order.status === 'confirmed' ? 'selected' : ''}>Confirmed</option>
                                            <option value="processing" ${order.status === 'processing' ? 'selected' : ''}>Processing</option>
                                            <option value="shipped" ${order.status === 'shipped' ? 'selected' : ''}>Shipped</option>
                                            <option value="delivered" ${order.status === 'delivered' ? 'selected' : ''}>Delivered</option>
                                            <option value="cancelled" ${order.status === 'cancelled' ? 'selected' : ''}>Cancelled</option>
                                        </select>
                                    </td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </div>
            `;

            container.innerHTML = ordersHTML;
        }

        function updateOrdersStats(orders) {
            document.getElementById('totalOrders').textContent = orders.length;
            document.getElementById('pendingOrders').textContent = orders.filter(o => o.status === 'confirmed' || o.status === 'processing').length;
            document.getElementById('shippedOrders').textContent = orders.filter(o => o.status === 'shipped' || o.status === 'delivered').length;

            const totalRevenue = orders.reduce((sum, order) => sum + order.total, 0);
            document.getElementById('totalRevenue').textContent = '£' + totalRevenue.toFixed(2);
        }

        function viewOrder(orderId) {
            fetch('/admin/orders')
                .then(response => response.json())
                .then(orders => {
                    const order = orders.find(o => o.id === orderId);
                    if (order) {
                        showOrderDetails(order);
                    }
                });
        }

        function showOrderDetails(order) {
            const orderDetails = document.getElementById('orderDetails');
            orderDetails.innerHTML = `
                <div style="margin-bottom: 2rem;">
                    <h3 style="color: #1a4c24; margin-bottom: 1rem;">Order #${order.id}</h3>
                    <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 1rem; margin-bottom: 1.5rem;">
                        <div>
                            <strong>Customer ID:</strong> ${order.userId}<br>
                            <strong>Status:</strong> <span class="status-badge status-${order.status}">${order.status}</span><br>
                            <strong>Order Date:</strong> ${new Date(order.createdAt).toLocaleDateString()}
                        </div>
                        <div>
                            <strong>Total:</strong> £${order.total.toFixed(2)}<br>
                            <strong>Items Count:</strong> ${order.items.length}
                        </div>
                    </div>

                    <h4 style="color: #1a4c24; margin-bottom: 1rem;">Order Items</h4>
                    <div class="order-items">
                        ${order.items.map(item => `
                            <div class="order-item">
                                <div>
                                    <strong>${item.name}</strong><br>
                                    <small style="color: #6b7280;">Quantity: ${item.quantity}</small>
                                </div>
                                <div style="text-align: right;">
                                    <div style="font-weight: bold; color: #22c55e;">£${(item.price * item.quantity).toFixed(2)}</div>
                                    <small style="color: #6b7280;">£${item.price.toFixed(2)} each</small>
                                </div>
                            </div>
                        `).join('')}
                    </div>

                    ${order.shippingAddress ? `
                        <h4 style="color: #1a4c24; margin: 1.5rem 0 1rem;">Shipping Address</h4>
                        <div style="background: rgba(34, 197, 94, 0.05); padding: 1rem; border-radius: 10px;">
                            ${order.shippingAddress.street}<br>
                            ${order.shippingAddress.city}, ${order.shippingAddress.postalCode}<br>
                            ${order.shippingAddress.country}
                        </div>
                    ` : ''}
                </div>
            `;

            document.getElementById('orderModal').style.display = 'block';
        }

        function updateOrderStatus(orderId, newStatus) {
            fetch(`/admin/orders/${orderId}/status`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ status: newStatus })
            })
            .then(response => response.json())
            .then(() => {
                loadOrders(); // Refresh the orders list
            })
            .catch(error => {
                console.error('Error updating order status:', error);
                alert('Failed to update order status');
            });
        }

        function closeOrderModal() {
            document.getElementById('orderModal').style.display = 'none';
        }

        // Accounts Management
        function loadAccounts() {
            const container = document.getElementById('accountsContainer');
            container.innerHTML = '<div class="loading"><i class="fas fa-spinner"></i><p>Loading accounts...</p></div>';

            fetch('/admin/accounts')
                .then(response => response.json())
                .then(accounts => {
                    displayAccounts(accounts);
                    updateAccountsStats(accounts);
                })
                .catch(error => {
                    console.error('Error loading accounts:', error);
                    container.innerHTML = '<p style="text-align: center; color: #ef4444;">Error loading accounts</p>';
                });
        }

        function displayAccounts(accounts) {
            const container = document.getElementById('accountsContainer');

            if (accounts.length === 0) {
                container.innerHTML = '<p style="text-align: center; color: #6b7280;">No customer accounts found</p>';
                return;
            }

            const accountsHTML = `
                <div class="table-container">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Customer ID</th>
                                <th>Cart Items</th>
                                <th>Cart Value</th>
                                <th>Total Orders</th>
                                <th>Last Activity</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${accounts.map(account => `
                                <tr>
                                    <td>${account.userId}</td>
                                    <td>${account.cartItems}</td>
                                    <td>£${account.totalCartValue.toFixed(2)}</td>
                                    <td>${account.orders.length}</td>
                                    <td>${new Date(account.lastActivity).toLocaleDateString()}</td>
                                    <td>
                                        <span class="status-badge ${account.cartItems > 0 || account.orders.length > 0 ? 'status-confirmed' : 'status-out_of_stock'}">
                                            ${account.cartItems > 0 || account.orders.length > 0 ? 'Active' : 'Inactive'}
                                        </span>
                                    </td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </div>
            `;

            container.innerHTML = accountsHTML;
        }

        function updateAccountsStats(accounts) {
            document.getElementById('totalAccounts').textContent = accounts.length;
            document.getElementById('activeAccounts').textContent = accounts.filter(a => a.cartItems > 0 || a.orders.length > 0).length;

            const totalOrderValue = accounts.reduce((sum, account) =>
                sum + account.orders.reduce((orderSum, order) => orderSum + order.total, 0), 0
            );
            const totalOrders = accounts.reduce((sum, account) => sum + account.orders.length, 0);
            const avgOrderValue = totalOrders > 0 ? totalOrderValue / totalOrders : 0;

            document.getElementById('averageOrderValue').textContent = '£' + avgOrderValue.toFixed(2);
        }

        // Payments Management (Manual Cash System)
        function loadPayments() {
            const container = document.getElementById('paymentsContainer');
            container.innerHTML = '<div style="text-align: center; padding: 2rem;"><h3>Manual Cash Payment System</h3><p>All payments are handled manually through cash transactions.<br>Use the Orders tab to track and manage orders.</p></div>';
        }

        function showBankingModal() {
            alert('Manual cash system - no banking details needed');
        }

        function closeBankingModal() {
            // Not needed for manual cash system
        }

        // Product form submission
        document.getElementById('productForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const id = document.getElementById('productId').value;
            const formData = {
                name: document.getElementById('name').value,
                price: parseFloat(document.getElementById('price').value),
                category: document.getElementById('category').value,
                status: document.getElementById('status').value,
                description: document.getElementById('description').value,
                image: document.getElementById('image').value || '/images/default.jpg'
            };

            const url = id ? `/admin/products/${id}` : '/admin/products';
            const method = id ? 'PUT' : 'POST';

            fetch(url, {
                method: method,
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(() => {
                closeModal();
                location.reload();
            })
            .catch(error => {
                console.error('Error saving product:', error);
                alert('Failed to save product');
            });
        });

        // Modal close on outside click
        window.onclick = function(event) {
            const productModal = document.getElementById('productModal');
            const orderModal = document.getElementById('orderModal');

            if (event.target === productModal) {
                closeModal();
            }
            if (event.target === orderModal) {
                closeOrderModal();
            }
        }

        // Update product stats on page load
        document.addEventListener('DOMContentLoaded', function() {
            const products = <%= JSON.stringify(products) %>;
            const inStock = products.filter(p => p.status === 'in_stock').length;
            const outOfStock = products.filter(p => p.status === 'out_of_stock').length;

            document.getElementById('inStockProducts').textContent = inStock;
            document.getElementById('outOfStockProducts').textContent = outOfStock;
        });
    </script>
</body>
</html>