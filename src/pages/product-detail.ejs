<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= product.name %> - Raw Essex</title>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700&family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            line-height: 1.6;
            color: #1a202c;
            background: linear-gradient(135deg, #0f172a 0%, #1a4c24 50%, #22c55e 100%);
            min-height: 100vh;
        }

        .nav-container {
            position: fixed;
            top: 0;
            width: 100%;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            z-index: 1000;
            transition: all 0.3s ease;
            border-bottom: 1px solid rgba(34, 197, 94, 0.1);
        }

        .nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px 40px;
        }

        .logo {
            display: flex;
            align-items: center;
            font-family: 'Playfair Display', serif;
            font-size: 2rem;
            font-weight: 700;
            color: #1a4c24;
            text-decoration: none;
        }

        .logo img {
            height: 60px;
            margin-right: 20px;
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 3rem;
            font-weight: 500;
        }

        .nav-links a {
            color: #1a4c24;
            text-decoration: none;
            padding: 12px 24px;
            border-radius: 50px;
            transition: all 0.3s ease;
            position: relative;
        }

        .nav-links a:hover {
            background: linear-gradient(135deg, #22c55e, #16a34a);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(34, 197, 94, 0.3);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 120px 20px 40px;
        }

        .breadcrumb {
            margin-bottom: 2rem;
        }

        .breadcrumb a {
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .breadcrumb a:hover {
            color: white;
        }

        .breadcrumb span {
            color: rgba(255, 255, 255, 0.5);
            margin: 0 0.5rem;
        }

        .product-detail {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 25px;
            padding: 3rem;
            backdrop-filter: blur(10px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
        }

        .product-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 4rem;
            align-items: start;
        }

        .product-image {
            position: relative;
            border-radius: 20px;
            overflow: hidden;
            background: linear-gradient(135deg, #f0fdf4, #dcfce7);
            height: 400px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 4rem;
            color: #22c55e;
        }

        .product-info h1 {
            font-family: 'Playfair Display', serif;
            font-size: 2.5rem;
            color: #1a4c24;
            margin-bottom: 1rem;
        }

        .product-price {
            font-size: 2rem;
            font-weight: 700;
            color: #22c55e;
            margin-bottom: 1rem;
        }

        .product-status {
            display: inline-block;
            padding: 0.5rem 1rem;
            border-radius: 25px;
            font-weight: 600;
            margin-bottom: 1.5rem;
        }

        .product-status.in_stock {
            background: #dcfce7;
            color: #166534;
        }

        .product-status.out_of_stock {
            background: #fee2e2;
            color: #991b1b;
        }

        .product-description {
            font-size: 1.1rem;
            line-height: 1.8;
            color: #4b5563;
            margin-bottom: 2rem;
        }

        .product-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
            margin-bottom: 2rem;
        }

        .quantity-selector {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            background: #f9fafb;
            border-radius: 10px;
            padding: 0.5rem;
        }

        .quantity-btn {
            background: #22c55e;
            color: white;
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            cursor: pointer;
            font-size: 1.2rem;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .quantity-btn:hover {
            background: #16a34a;
            transform: scale(1.1);
        }

        .quantity-btn:disabled {
            background: #9ca3af;
            cursor: not-allowed;
            transform: none;
        }

        .quantity-input {
            width: 60px;
            text-align: center;
            border: none;
            background: transparent;
            font-size: 1.1rem;
            font-weight: 600;
        }

        .add-to-cart-btn {
            flex: 1;
            padding: 1rem 2rem;
            background: linear-gradient(135deg, #22c55e, #16a34a);
            color: white;
            border: none;
            border-radius: 25px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }

        .add-to-cart-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(34, 197, 94, 0.3);
        }

        .add-to-cart-btn:disabled {
            background: #9ca3af;
            cursor: not-allowed;
            transform: none;
        }

        .product-details {
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 1px solid #e5e7eb;
        }

        .detail-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 1rem;
            padding: 0.5rem 0;
        }

        .detail-label {
            font-weight: 600;
            color: #374151;
        }

        .detail-value {
            color: #6b7280;
        }

        .back-link {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            margin-bottom: 2rem;
            transition: color 0.3s ease;
        }

        .back-link:hover {
            color: white;
        }

        .cart-notification {
            position: fixed;
            top: 100px;
            right: 20px;
            background: white;
            border: 1px solid #22c55e;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            z-index: 1000;
            transform: translateX(400px);
            transition: all 0.3s ease;
        }

        .cart-notification.show {
            transform: translateX(0);
        }

        .notification-content {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .notification-content i {
            color: #22c55e;
            font-size: 1.2rem;
        }

        .notification-content a {
            background: #22c55e;
            color: white;
            padding: 5px 15px;
            border-radius: 20px;
            text-decoration: none;
            font-size: 0.9rem;
            margin-left: 10px;
        }

        @media (max-width: 768px) {
            .product-grid {
                grid-template-columns: 1fr;
                gap: 2rem;
            }

            .product-info h1 {
                font-size: 2rem;
            }

            .product-actions {
                flex-direction: column;
                align-items: stretch;
            }

            .quantity-selector {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <div class="nav-container">
        <nav class="nav">
            <div class="logo">
                <img src="/images/raw-essex-logo.jpg" alt="Raw Essex Logo">
                Raw Essex
            </div>
            <ul class="nav-links">
                <li><a href="/">Home</a></li>
                <li><a href="/products">All Products</a></li>
                <li><a href="/faq">FAQ & Education</a></li>
                <li><a href="/cart"><i class="fas fa-shopping-cart"></i> Cart</a></li>
                <li><a href="/premium-admin">Admin Panel</a></li>
            </ul>
        </nav>
    </div>

    <div class="container">
        <a href="/products" class="back-link">
            <i class="fas fa-arrow-left"></i>
            Back to Products
        </a>

        <div class="breadcrumb">
            <a href="/">Home</a>
            <span>/</span>
            <a href="/products">Products</a>
            <span>/</span>
            <span style="color: white;"><%= product.name %></span>
        </div>

        <div class="product-detail">
            <div class="product-grid">
                <div class="product-image">
                    <% if (product.image && product.image !== '/images/default.jpg') { %>
                        <img src="<%= product.image %>" alt="<%= product.name %>" style="width: 100%; height: 100%; object-fit: cover;">
                    <% } else { %>
                        🥩
                    <% } %>
                </div>

                <div class="product-info">
                    <h1><%= product.name %></h1>
                    <div class="product-price">£<%= product.price.toFixed(2) %></div>
                    <div class="product-status <%= product.status %>">
                        <%= product.status === 'in_stock' ? 'In Stock' : 'Out of Stock' %>
                    </div>

                    <div class="product-description">
                        <%= product.description %>
                    </div>

                    <% if (product.status === 'in_stock') { %>
                        <div class="product-actions">
                            <div class="quantity-selector">
                                <button class="quantity-btn" onclick="changeQuantity(-1)">-</button>
                                <input type="number" class="quantity-input" id="quantity" value="1" min="1" max="10">
                                <button class="quantity-btn" onclick="changeQuantity(1)">+</button>
                            </div>
                            <button class="add-to-cart-btn" onclick="addToCart()">
                                <i class="fas fa-shopping-cart"></i>
                                Add to Cart
                            </button>
                        </div>
                    <% } else { %>
                        <button class="add-to-cart-btn" disabled>
                            <i class="fas fa-exclamation-circle"></i>
                            Out of Stock
                        </button>
                    <% } %>

                    <div class="product-details">
                        <div class="detail-item">
                            <span class="detail-label">Category:</span>
                            <span class="detail-value"><%= product.category %></span>
                        </div>
                        <% if (product.brand) { %>
                            <div class="detail-item">
                                <span class="detail-label">Brand:</span>
                                <span class="detail-value"><%= product.brand %></span>
                            </div>
                        <% } %>
                        <div class="detail-item">
                            <span class="detail-label">Product ID:</span>
                            <span class="detail-value">#<%= product.id %></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Generate unique user ID if not exists
        function getUserId() {
            let userId = localStorage.getItem('rawEssexUserId');
            if (!userId) {
                userId = 'user_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
                localStorage.setItem('rawEssexUserId', userId);
            }
            return userId;
        }

        // Quantity controls
        function changeQuantity(delta) {
            const quantityInput = document.getElementById('quantity');
            let currentValue = parseInt(quantityInput.value);
            const newValue = currentValue + delta;

            if (newValue >= 1 && newValue <= 10) {
                quantityInput.value = newValue;
            }
        }

        // Add to cart functionality
        async function addToCart() {
            const userId = getUserId();
            const quantity = parseInt(document.getElementById('quantity').value);
            const productId = '<%= product.id %>';
            const productName = '<%= product.name.replace(/'/g, '\\\'') %>';

            try {
                const response = await fetch(`/api/cart/${userId}/add`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        productId: productId,
                        quantity: quantity
                    })
                });

                const result = await response.json();

                if (result.success) {
                    showCartNotification(productName, quantity, result.cartCount);
                    updateCartBadge(result.cartCount);
                } else {
                    alert('Failed to add product to cart');
                }
            } catch (error) {
                console.error('Error adding to cart:', error);
                alert('Error adding product to cart');
            }
        }

        // Show cart notification
        function showCartNotification(productName, quantity, cartCount) {
            // Remove existing notification if any
            const existingNotification = document.querySelector('.cart-notification');
            if (existingNotification) {
                existingNotification.remove();
            }

            // Create notification
            const notification = document.createElement('div');
            notification.className = 'cart-notification';
            notification.innerHTML = `
                <div class="notification-content">
                    <i class="fas fa-check-circle"></i>
                    <span>${quantity}x ${productName} added to cart!</span>
                    <a href="/cart">View Cart (${cartCount})</a>
                </div>
            `;

            document.body.appendChild(notification);

            // Show notification
            setTimeout(() => {
                notification.classList.add('show');
            }, 100);

            // Hide notification after 4 seconds
            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.remove();
                    }
                }, 300);
            }, 4000);
        }

        // Update cart badge in navigation
        function updateCartBadge(count) {
            let badge = document.querySelector('.cart-badge');
            if (!badge && count > 0) {
                const cartLink = document.querySelector('a[href="/cart"]');
                if (cartLink) {
                    badge = document.createElement('span');
                    badge.className = 'cart-badge';
                    badge.style.cssText = 'background: #ef4444; color: white; border-radius: 50%; padding: 2px 6px; font-size: 0.8rem; margin-left: 5px;';
                    cartLink.appendChild(badge);
                }
            }

            if (badge) {
                if (count > 0) {
                    badge.textContent = count;
                    badge.style.display = 'inline';
                } else {
                    badge.style.display = 'none';
                }
            }
        }

        // Load cart count on page load
        async function loadCartCount() {
            const userId = getUserId();
            try {
                const response = await fetch(`/api/cart/${userId}`);
                const cart = await response.json();
                const totalCount = cart.reduce((sum, item) => sum + item.quantity, 0);
                updateCartBadge(totalCount);
            } catch (error) {
                console.error('Error loading cart count:', error);
            }
        }

        // Load cart count when page loads
        document.addEventListener('DOMContentLoaded', loadCartCount);
    </script>
</body>
</html>